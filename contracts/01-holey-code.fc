() recv_internal(slice in_msg) impure {
}

() recv_external(slice in_msg) impure {
  slice signature = in_msg~load_bits(512);
  slice in_msg_tmp = in_msg;
  int msg_seqno = in_msg_tmp~load_uint(32);
  int valid_until = in_msg_tmp~load_uint(32);
  throw_if(35, valid_until <= now());
  cell data_cell = get_data();
  slice data = data_cell.begin_parse();
  var (stored_seqno, public_key) = (data~load_uint(32), data~load_uint(256));
  data.end_parse();
  throw_unless(33, msg_seqno == stored_seqno);
  accept_message();
  throw_unless(34, check_signature(slice_hash(in_msg), signature, public_key));
  in_msg_tmp~touch();
  while (in_msg_tmp.slice_refs()) {
    var mode = in_msg_tmp~load_uint(8);
    send_raw_message(in_msg_tmp~load_ref(), mode);
  }
  in_msg_tmp.end_parse();
  set_data(begin_cell().store_uint(stored_seqno + 1, 32).store_uint(public_key, 256).end_cell());
}

;; add your code here	
int seqno() method_id {
  return get_data().begin_parse().preload_uint(32);
}
;;